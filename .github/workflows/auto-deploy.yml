name: Auto Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Deploy to Vercel (if using Vercel)
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

  # Deploy to Netlify (if using Netlify)
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Deploy to GitHub Pages
  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Notify deployment status
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify, deploy-github-pages]
    if: always()
    
    steps:
    - name: Deployment Summary
      run: |
        echo "üöÄ Deployment Summary"
        echo "======================"
        echo "Vercel: ${{ needs.deploy-vercel.result }}"
        echo "Netlify: ${{ needs.deploy-netlify.result }}"
        echo "GitHub Pages: ${{ needs.deploy-github-pages.result }}"
        
        if [[ "${{ needs.deploy-vercel.result }}" == "success" ]] || \
           [[ "${{ needs.deploy-netlify.result }}" == "success" ]] || \
           [[ "${{ needs.deploy-github-pages.result }}" == "success" ]]; then
          echo "‚úÖ At least one deployment succeeded!"
        else
          echo "‚ùå All deployments failed!"
          exit 1
        fi
