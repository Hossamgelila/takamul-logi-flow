name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Build & Test
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Build application
      run: npm run build
      
    - name: Build development version
      run: npm run build:dev
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 30

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Deploy to Preview (for PRs)
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build preview
      run: npm run build:dev
      
    - name: Deploy to preview environment
      run: |
        echo "Deploying preview for PR #${{ github.event.number }}"
        # Add your preview deployment logic here
        # Example: Deploy to Vercel, Netlify, or your hosting platform

  # Deploy to Production (for main branch)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production
      run: npm run build
      
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your production deployment logic here
        # Example: Deploy to Vercel, Netlify, or your hosting platform
        
    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"
        # Add notification logic (Slack, Discord, email, etc.)

  # Dependency Updates
  dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    schedule:
      - cron: '0 2 * * 1' # Every Monday at 2 AM UTC
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: npm outdated
      
    - name: Create dependency update PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'ðŸ”„ Update Dependencies'
        body: |
          Automated dependency updates
          
          This PR was created automatically to keep dependencies up to date.
          
          Please review the changes and merge if everything looks good.
        branch: 'chore/dependency-updates'
        delete-branch: true
